{
  
    
        "post0": {
            "title": "Wireless network technologies",
            "content": "The 802.11 standards . standard freq maxthroughput(total) maxMIMOstreams maxthroughput(per stream) band-width maxrange(indoor) back-wardcompat-ibility year . 802.11a | 5.0 GHz | 54 Mbps | - | 54 Mbps | 20 MHz | 35 m | - | 1999 | . 802.11b | 2.4 GHz | 11 Mbps | - | 11 Mbps | 22 MHz | 35 m | - | 1999 | . 802.11g | 2.4 GHz | 54 Mbps | - | 54 Mbps | 20 MHz | 38 m | 802.11b | 2003 | . 802.11n | 2.4 GHz5.0 GHz | 600 Mbps | 4 MIMO | 150 Mbps | 24, 40 MHz | 70 m | 802.11a/b/g | 2009 | . 802.11ac | 5.0 GHz | 6.8 Gbps | 8 MU-MIMO | 866.7 MHz | 20, 40,80, 160 MHz | 35 m | 802.11a/n | 2013 | . Channels and frequencies . band name frequency band non-overlapping 20 MHz-wide channels . 2.4 GHz | 2.400-2.500GHz | 3 (&#35;1, &#35;6, &#35;11 of 11 available) | . 5.0 GHz | 4.915–5.825 GHz | 23 | . Bluetooth . Bluetooth is a short-range wireless interconnetion of mobile phones, computers and other electronic devices. | Devices operate in the 2.4 to 2.485 GHz radio frequency range and are typically used for PANs. | . Classification .   max. permitted power approximate distance . class 1 | 100 mW | ~330 ft (100 m) | . class 2(most common) | 2.5 mW | ~30 ft (10 m) | . class 3 | 1 mW | ~3 ft (1 m) | . Specifications . specification version data transfer rate . 1.0 | v1.2 | 1 Mbps | . 2.0 | v2.0 + EDR | 3 Mbps | . 3.0 | v3.0 + HS | 24 Mbps | . 4.0 | v4.0 + LE | 1 Mbps | . 5.0 | v5.0 + LE | 125 Kbps, 500 Kbps, 1 Mbps, 2 Mbps | . References . Professor Messer: 802.11 wireless standards - CompTIA A+ 220-1001 | Wireless network technologies - CompTIA A+ 220-1101 | Wireless interface speeds and distances - CompTIA A+ 220-901 | . | Wikipedia: IEEE 802.11: Protocol | IEEE 802.11: Channels and frequencies | Bluetooth | . | David Bigger, CompTIA A+ course | Metis: WiFi 5GHz band and wide channels | Flylib: The Bluetooth protocol | .",
            "url": "https://antoinechoffrut.github.io/com-net-sec/cheatsheet/wireless/protocols/2020/05/29/wireless-network-technologies.html",
            "relUrl": "/cheatsheet/wireless/protocols/2020/05/29/wireless-network-technologies.html",
            "date": " • May 29, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "The sed command (macOS)",
            "content": "Preliminaries . References . FreeBSD man page (freebsd) | mac OS sed documentation (ss64) | sed tutorial (grymoire) | IBM: the sed command | . BSD sed . . Important: MacOS uses the FreeBSD version of sed: . man sed | grep -n &quot;BSD&quot; -C1 . 1- 2:SED(1) BSD General Commands Manual SED(1) 3- -- -- 345- 346: The -E, -a and -i options are non-standard FreeBSD extensions and may not 347- be available on other operating systems. -- -- 352-AUTHORS 353: Diomidis D. Spinellis &lt;dds@FreeBSD.org&gt; 354- -- -- 360- 361:BSD May 10, 2005 BSD . . Note: There doesn&#8217;t seem to be a way to find a version number on macOS from the OS, even if one looks in the binary code with the command strings $(which sed). However, this information is available from apple&#8217;s source browser. . Basic usage . Silent mode with flag-n, print with command p . By default, the command sed simply outputs each line, one at a time: . echo -e &quot;bob njoe ntim&quot; | sed . bob joe tim . Do not print anything: . echo -e &quot;bob njoe ntim&quot; | sed -n . Duplicate every line, i.e. for each line, print it: . echo -e &quot;bob njoe ntim&quot; | sed &#39;p&#39; . bob bob joe joe tim tim . Print each line once: . echo -e &#39;bob njoe ntim&#39; | sed -n &#39;p&#39; . bob joe tim . Reverse command with &#39;!&#39;: . echo -e &#39;bob njoe ntime&#39; | sed -n &#39;!p&#39; . Pattern matching . Print lines matching a pattern with the command p: . echo -e &quot;bob rob bob njoe nbob&quot; | sed -n &#39;/bob/p&#39; . bob rob bob bob . Some explanations: . -n: do not print anything; | /bob/: pattern to match; | /p: print line when there is a match. | . Print lines not matching a pattern: . echo -e &quot;bob rob bob njoe nbob ntim&quot; | sed -n &#39;/bob/ !p&#39; . joe tim . Print line numbers where matches occur with the command =: . echo -e &quot;bob rob bob njoe nbob&quot; | sed -n &#39;/bob/=&#39; . 1 3 . Quit with command q . Quit printing file after match: . echo -e &#39;one: bob ntwo: bob nthree:bob n&#39; | sed -e &#39;/two/ q&#39; . one: bob two: bob . As an application, perform substitution up to match: . echo -e &#39;one: bob ntwo: bob nthree:bob n&#39; | sed -e &#39;s/bob/BOB/&#39; -e &#39;/two/ q&#39; . one: BOB two: BOB . Note how the order matters; . echo -e &#39;one: bob ntwo: bob nthree:bob n&#39; | sed -e &#39;/two/ q&#39; -e &#39;s/bob/BOB/&#39; . one: BOB two: bob . Transformation with y: . echo &quot;This is NOW in loweRcase&quot; | sed &#39;y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/&#39; . this is now in lowercase . Substitution with s . Sustitute a word for another, in each line: . echo -e &quot;day nDay ndAy nMonday&quot; | sed &#39;s/day/night/&#39; . night Day dAy Monnight . Note that the match is case-sensitive. . Only the first occurrence in each line will be substituted: . echo -e &quot;one two three, one two three nfour three two one none hundred&quot; | sed &#39;s/one/ONE/&#39; . ONE two three, one two three four three two ONE ONE hundred . Select occurrence for substitution with index: /1, /2, etc. . echo &quot;one one one&quot; | sed &#39;s/one/ONE/1&#39; . ONE one one . echo &quot;one one one&quot; | sed &#39;s/one/ONE/2&#39; . one ONE one . echo &quot;one one one&quot; | sed &#39;s/one/ONE/3&#39; . one one ONE . echo &quot;one one one&quot; | sed &#39;s/one/ONE/4&#39; . one one one . Global substitution: /g . To perform substitution on all non-overlapping match, use the /g option: . echo -e &quot;one two three, one two three nfour three two one none hundred&quot; | sed &#39;s/one/ONE/g&#39; . ONE two three, ONE two three four three two ONE ONE hundred . Silence output with -n, printed substituted lines with /p . The flag -n, nothing is sent to standard output: . echo -e &quot;day nDay ndAy nMonday&quot; | sed -n &#39;s/day/night/&#39; . But with the /p flag, write the pattern space to standard output if a substitution occurred: . echo -e &quot;day nDay ndAy nMonday&quot; | sed -n &#39;s/day/night/p&#39; . night Monnight . Thus, without the option -n, lines with substitution appear twice: . echo -e &quot;day nDay ndAy nMonday&quot; | sed &#39;s/day/night/p&#39; . night night Day dAy Monnight Monnight . Regular expressions . Replace the first single-digit number with a fixed string: . echo &quot;abce345f&quot; | sed &#39;s/[0-9]/X/&#39; . abceX45f . Replace the first longest consecutive string of digits with a fixed string: . echo &quot;123 456 abc&quot; | sed &#39;s/[0-9]*/X/&#39; . X 456 abc . . Important: Since the asterisk * stands for zero or more character, the first match for [0-9]* will occur at the beginning of the line if it doesn&#8217;t start with a number: . echo &quot;abc 123 def &quot; | sed &#39;s/[0-9]*/X/&#39; . Xabc 123 def . To match one or more character, use the extended regular expressioon +, with the option -E: . echo &quot;abc 123 def &quot; | sed -E &#39;s/[0-9]+/X/&#39; . abc X def . Refer to the match with &amp; . Put parentheses around the first digit appearing in the line: . echo &quot;abc 123 def &quot; | sed -E &#39;s/[0-9]/(&amp;)/&#39; . abc (1)23 def . Put parentheses around the first multi-digit number appearing in the line: . echo &quot;abc 123 def &quot; | sed -E &#39;s/[0-9]+/(&amp;)/&#39; . abc (123) def . Put parentheses around each digit appearing in the line: . echo &quot;abc 123 def 456&quot; | sed -E &#39;s/[0-9]/(&amp;)/g&#39; . abc (1)(2)(3) def (4)(5)(6) . &amp; can be used multiple times: . echo &quot;abc 123 def&quot; | sed -E &#39;s/[0-9]+/(&amp; &amp;)/&#39; . abc (123 123) def . Handle on matches: ( ), 1, 2, etc. . Keep only first word of line, using a basic regular expression: . echo &quot;Do not do this&quot; | sed &#39;s/ ([a-zA-Z]* ).*/ 1/&#39; . Do . ... and using an extenced regular expression: . echo &quot;Do not do this&quot; | sed -E &#39;s/([a-zA-Z]*).*/ 1/&#39; . Do . Swap strings: . echo &quot;123 321: swap occurred&quot; | sed -E &#39;s/([0-9]+) ([0-9]+)/ 2 1/&#39; . 321 123: swap occurred . Remove duplicated words: . echo &quot;I I don&#39;t stutter stutter&quot; | sed &#39;s/ ([a-zA-Z]* ) 1/ 1 /g&#39; . I don&#39;t stutter . echo &quot;I I don&#39;t stutter stutter&quot; | sed &#39;s/ ([a-zA-Z]* ) 1/ 1 /g&#39; . I don&#39;t stutter . Parentheses around first word: . echo &quot;put parentheses around first blob&quot; | sed &#39;s/[^ ]*/(&amp;)/&#39; . (put) parentheses around first blob . Apply substitution on second occurrence only: . echo &quot;au invisibleword clair de la lune&quot; | sed -E &#39;s/[a-z]+//2&#39; . au clair de la lune . Add a colon after character in position 10: . echo &quot;add a colon after character in position ten&quot; | sed &#39;s/./&amp;:/10&#39; . add a colo:n after character in position ten . Duplicate grep with -n and /p . . Note: grep looks for the first occurrence of a pattern in each line: . echo -e &quot;bob rob bob njoe nbob&quot; | grep &quot;bob&quot; . bob rob bob bob . echo -e &quot;bob rob bob njoe nbob&quot; | sed -n &#39;s/bob/&amp;/p&#39; . bob rob bob bob . echo -e &quot;bob rob bob njoe nbob&quot; | sed -n &#39;/bob/p&#39; . bob rob bob bob . Execute several commands: -e . echo &quot;abc&quot; | sed -n -e &#39;s/a/1/p&#39; -e &#39;s/b/2/p&#39; . 1bc 12c . Delete lines . Delete line by its number: . echo -e &quot;1 n2 n3&quot; | sed &#39;2d&#39; . 1 3 . Delete last line: . echo -e &quot;1 n2 n3&quot; | sed &#39;$d&#39; . 1 2 . echo -e &#39;one n ntwo n nthree&#39; | sed &#39;/ S/d&#39; . one two three . Combining substitution flags . echo -e &quot;one none one none one one none one one one&quot; | sed -n &#39;s/one/ONE/3p&#39; . one one ONE one one ONE one . Restricting to a line number . echo -e &#39;one none none&#39; | sed &#39;2 s/one/ONE/&#39; . one ONE one . Match and substitution . echo -e &quot;bob: hi njoe: hello nbob: how are you?&quot; | sed &#39;/bob/ s/h/H/&#39; . bob: Hi joe: hello bob: How are you? . echo -e &#39;parentheses around first word of each lines nonly if the word &quot;line&quot; nappears in it nthis is the last line&#39; | sed -E &#39;/line/s/[a-z]+/(&amp;)/&#39; . (parentheses) around first word of each lines (only) if the word &#34;line&#34; appears in it (this) is the last line . Further examples . echo -e &#39;#a nthis line does not start with a pound sign n#b&#39; | sed &#39;s/^#.*/[There was a line beginning with a pound sign]/&#39; . [There was a line beginning with a pound sign] this line does not start with a pound sign [There was a line beginning with a pound sign] . Count the number of non-blank lines not beginning with #: . echo -e &quot;#a nthis line does not start with a pound sign n#b&quot; | sed &#39;s/^#.*//&#39; | grep &quot; S&quot; | wc -l . 1 . Ranges by line number . Specify range of lines to which substitution is performed: . echo -e &quot;one none none none&quot; | sed &#39;2,3 s/one/ONE/&#39; . one ONE ONE one . Perform subsitution from specified line to end of file: . echo -e &quot;one none none none&quot; | sed &#39;2,$ s/one/ONE/&#39; . one ONE ONE ONE . Ranges by patterns . echo -e &quot;one: bob ntwo: bob nthree: bob nfour: bob nfive: bob&quot; | sed &#39;/two/,/three/ s/bob/BOB/&#39; . one: bob two: BOB three: BOB four: bob five: bob . Hybrid ranges . echo -e &quot;one: bob ntwo: bob nthree: bob nfour: bob nfive: bob&quot; | sed &#39;2,/three/ s/bob/BOB/&#39; . one: bob two: BOB three: BOB four: bob five: bob . Remove everything up to the first blank line: . echo -e &quot;first line nsecond line n nthere was a blank line nright above nthe end&quot; | sed &#39;1,/^$/d&#39; . there was a blank line right above the end . echo -e &#39;a n nb c&#39; | grep -n --color &#39; s&#39; . 3:b c . echo -e &quot;first line nsecond line n nthere was a blank line nthe end&quot; | hexdump -C . 00000000 66 69 72 73 74 20 6c 69 6e 65 0a 73 65 63 6f 6e |first line.secon| 00000010 64 20 6c 69 6e 65 0a 0a 74 68 65 72 65 20 77 61 |d line..there wa| 00000020 73 20 61 20 62 6c 61 6e 6b 20 6c 69 6e 65 0a 74 |s a blank line.t| 00000030 68 65 20 65 6e 64 0a |he end.| 00000037 . echo -e &#39; t&#39; | hexdump -C . 00000000 09 0a |..| 00000002 .",
            "url": "https://antoinechoffrut.github.io/com-net-sec/cheatsheet/cli/macos/2020/05/15/sed-cheatsheet.html",
            "relUrl": "/cheatsheet/cli/macos/2020/05/15/sed-cheatsheet.html",
            "date": " • May 15, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "The find command (macOS)",
            "content": "Documentation . From the man page (ss64.com): . DESCRIPTION The find utility recursively descends the directory tree for each path listed, evaluating an expression (composed of the ``primaries&#39;&#39; and ``operands&#39;&#39; listed below) in terms of each file in the tree. . Further references: . man page of the find command in linux (ss64) . | 35 pratical examples of linux find command (tecmint) . | . List all files in directory tree . List all files in specified directory and its subdirectories, recursively: . find /usr/share/dict . /usr/share/dict /usr/share/dict/words /usr/share/dict/web2 /usr/share/dict/README /usr/share/dict/connectives /usr/share/dict/web2a /usr/share/dict/propernames . Total number of results: . find /usr/share/dict | wc -l . 7 . Restrict depth of search: -maxdepth, -mindepth . Specify maximum depth down the directory tree: . find /usr/share/dict -maxdepth 0 . /usr/share/dict . Specify minimum depth down the directory tree: . find /usr/share/dict -mindepth 1 . /usr/share/dict/words /usr/share/dict/web2 /usr/share/dict/README /usr/share/dict/connectives /usr/share/dict/web2a /usr/share/dict/propernames . Find by name: -name . Find a file by its name: . find /usr/share -name &quot;flowers&quot; . /usr/share/misc/flowers . Note that find descends the tree, so it will return all files with the same name present in all subdirectories: . find /usr/share -name &quot;calendar.holiday&quot; . /usr/share/calendar/uk_UA.KOI8-U/calendar.holiday /usr/share/calendar/ru_RU.KOI8-R/calendar.holiday /usr/share/calendar/calendar.holiday . Find all files (including directories) containing a string pattern: . find /usr/share -name &quot;*german*&quot; . /usr/share/vim/vim81/lang/menu_german_germany.1252.vim /usr/share/calendar/calendar.german /usr/share/germantok /usr/share/germantok/german.index . Find by type: -type . Possible file types: . b: block special | c: character special | d: directory | f: regular file | l: symbolic link | p: FIFO | s: socket | . Some of theses are (regular) files, others are directories: . find /usr/share -name &quot;*german*&quot; | xargs ls -ld | sort . -rw-r--r-- 1 root wheel 105 4 Sep 2019 /usr/share/vim/vim81/lang/menu_german_germany.1252.vim -rw-r--r-- 1 root wheel 261 24 Aug 2019 /usr/share/calendar/calendar.german -rw-r--r-- 1 root wheel 5018153 25 Aug 2019 /usr/share/germantok/german.index drwxr-xr-x 3 root wheel 96 25 Aug 2019 /usr/share/germantok . Find all regular files (in particular, excluding directories) containing a string pattern: . find /usr/share -name &quot;*german*&quot; -type f . /usr/share/vim/vim81/lang/menu_german_germany.1252.vim /usr/share/calendar/calendar.german /usr/share/germantok/german.index . Find all directories (in particular excluding regular files) containing a string pattern: . find /usr/share -name &quot;*german*&quot; -type d . /usr/share/germantok . Find by permissions: -perm . A directory containing files with different permissions: . find /usr/share/dict | xargs ls -ld . drwxr-xr-x 8 root wheel 256 19 Oct 2019 /usr/share/dict -r--r--r-- 1 root wheel 1311 24 Aug 2019 /usr/share/dict/README -r--r--r-- 1 root wheel 706 24 Aug 2019 /usr/share/dict/connectives -r--r--r-- 1 root wheel 8546 24 Aug 2019 /usr/share/dict/propernames -r--r--r-- 1 root wheel 2493109 24 Aug 2019 /usr/share/dict/web2 -r--r--r-- 1 root wheel 1012731 24 Aug 2019 /usr/share/dict/web2a lrwxr-xr-x 1 root wheel 4 19 Oct 2019 /usr/share/dict/words -&gt; web2 . Find files with specified permission: . find /usr/share/dict -perm 444 . /usr/share/dict/web2 /usr/share/dict/README /usr/share/dict/connectives /usr/share/dict/web2a /usr/share/dict/propernames . Find files without specified permission: . find /usr/share/dict ! -perm 444 . /usr/share/dict /usr/share/dict/words . Find files by symbolic mode: for user... . find /usr/share/dict -perm -u=rwx . /usr/share/dict /usr/share/dict/words . ... for group: . find /usr/share/dict -perm -g=r-x . /usr/share/dict /usr/share/dict/words /usr/share/dict/web2 /usr/share/dict/README /usr/share/dict/connectives /usr/share/dict/web2a /usr/share/dict/propernames . ... for others: . find /usr/share/dict -perm -o=r-x . /usr/share/dict /usr/share/dict/words /usr/share/dict/web2 /usr/share/dict/README /usr/share/dict/connectives /usr/share/dict/web2a /usr/share/dict/propernames . Find by size: -size . Available suffixes (from the man page of the linux command): . b: 512-byte blocks (this is the default if no suffix is used) | c: bytes | w: two-byte words | k: Kilobytes | M: Megabytes | G: Gigabytes | . Find files greater than a specified size: . find /usr/share/examples/DTTk/ -size +5k . /usr/share/examples/DTTk//iopending_example.txt /usr/share/examples/DTTk//iotop_example.txt /usr/share/examples/DTTk//seeksize_example.txt /usr/share/examples/DTTk//dapptrace_example.txt /usr/share/examples/DTTk//pridist_example.txt . Find files smaller than a specified size: . find /usr/share/examples/DTTk -size -1k . /usr/share/examples/DTTk/kill_example.txt /usr/share/examples/DTTk/iofileb_example.txt /usr/share/examples/DTTk/creatbyproc_example.txt /usr/share/examples/DTTk/rwbypid_example.txt /usr/share/examples/DTTk/pidpersec_example.txt /usr/share/examples/DTTk/loads_example.txt /usr/share/examples/DTTk/sigdist_example.txt /usr/share/examples/DTTk/syscallbyproc_example.txt . Find files of exactly (up to roundup) a specified size: . find /usr/share/examples/DTTk/ -size 358c . /usr/share/examples/DTTk//kill_example.txt . . Note: The directory chosen abovec contains only files, listed below in increasing order of size: . ls -lSr /usr/share/examples/DTTk/ . total 432 -rw-r--r-- 1 root wheel 358 25 Aug 2019 kill_example.txt -rw-r--r-- 1 root wheel 557 25 Aug 2019 loads_example.txt -rw-r--r-- 1 root wheel 605 25 Aug 2019 creatbyproc_example.txt -rw-r--r-- 1 root wheel 622 25 Aug 2019 sigdist_example.txt -rw-r--r-- 1 root wheel 636 25 Aug 2019 rwbypid_example.txt -rw-r--r-- 1 root wheel 818 25 Aug 2019 iofileb_example.txt -rw-r--r-- 1 root wheel 827 25 Aug 2019 syscallbyproc_example.txt -rw-r--r-- 1 root wheel 955 25 Aug 2019 pidpersec_example.txt -rw-r--r-- 1 root wheel 1031 25 Aug 2019 pathopens_example.txt -rw-r--r-- 1 root wheel 1127 25 Aug 2019 setuids_example.txt -rw-r--r-- 1 root wheel 1159 25 Aug 2019 newproc_example.txt -rw-r--r-- 1 root wheel 1334 25 Aug 2019 syscallbysysc_example.txt -rw-r--r-- 1 root wheel 1436 25 Aug 2019 iofile_example.txt -rw-r--r-- 1 root wheel 1530 25 Aug 2019 rwbytype_example.txt -rw-r--r-- 1 root wheel 1536 25 Aug 2019 fddist_example.txt -rw-r--r-- 1 root wheel 1550 25 Aug 2019 filebyproc_example.txt -rw-r--r-- 1 root wheel 1647 25 Aug 2019 hotspot_example.txt -rw-r--r-- 1 root wheel 1830 25 Aug 2019 iosnoop_example.txt -rw-r--r-- 1 root wheel 2050 25 Aug 2019 sampleproc_example.txt -rw-r--r-- 1 root wheel 2139 25 Aug 2019 topsysproc_example.txt -rw-r--r-- 1 root wheel 2260 25 Aug 2019 iopattern_example.txt -rw-r--r-- 1 root wheel 2457 25 Aug 2019 topsyscall_example.txt -rw-r--r-- 1 root wheel 2518 25 Aug 2019 execsnoop_example.txt -rw-r--r-- 1 root wheel 2530 25 Aug 2019 dispqlen_example.txt -rw-r--r-- 1 root wheel 2987 25 Aug 2019 syscallbypid_example.txt -rw-r--r-- 1 root wheel 3239 25 Aug 2019 cpuwalk_example.txt -rw-r--r-- 1 root wheel 3315 25 Aug 2019 dappprof_example.txt -rw-r--r-- 1 root wheel 3629 25 Aug 2019 bitesize_example.txt -rw-r--r-- 1 root wheel 4135 25 Aug 2019 priclass_example.txt -rw-r--r-- 1 root wheel 4275 25 Aug 2019 errinfo_example.txt -rw-r--r-- 1 root wheel 4500 25 Aug 2019 lastwords_example.txt -rw-r--r-- 1 root wheel 4505 25 Aug 2019 dtruss_example.txt -rw-r--r-- 1 root wheel 4584 25 Aug 2019 procsystime_example.txt -rw-r--r-- 1 root wheel 4658 25 Aug 2019 opensnoop_example.txt -rw-r--r-- 1 root wheel 5074 25 Aug 2019 rwsnoop_example.txt -rw-r--r-- 1 root wheel 6108 25 Aug 2019 iopending_example.txt -rw-r--r-- 1 root wheel 6737 25 Aug 2019 iotop_example.txt -rw-r--r-- 1 root wheel 6984 25 Aug 2019 dapptrace_example.txt -rw-r--r-- 1 root wheel 10361 25 Aug 2019 seeksize_example.txt -rw-r--r-- 1 root wheel 10718 25 Aug 2019 pridist_example.txt . Files by timestamps: -mtime, -mmin, -atime, etc. . Possible timestamps: . creation/birth time; | last access time; | last modification time (content); | last change time (permissions) | . Create files and manipulate creation, modification, and access times: . cd ~/.Trash echo &quot;Creating old file...&quot; touch oldfile.txt touch -t 202002011234 oldfile.txt stat -f &quot;Access (atime): %Sa%nModify (mtime): %Sm%nChange (ctime): %Sc%nBirth (Btime): %SB&quot; oldfile.txt . Creating old file... Access (atime): Feb 1 12:34:00 2020 Modify (mtime): Feb 1 12:34:00 2020 Change (ctime): May 18 22:41:45 2020 Birth (Btime): Feb 1 12:34:00 2020 . cd ~/.Trash echo &quot;Creating new file...&quot; touch newfile.txt touch -t 202005041234 newfile.txt stat -f &quot;Access (atime): %Sa%nModify (mtime): %Sm%nChange (ctime): %Sc%nBirth (Btime): %SB&quot; newfile.txt . Creating new file... Access (atime): May 4 12:34:00 2020 Modify (mtime): May 4 12:34:00 2020 Change (ctime): May 18 22:41:46 2020 Birth (Btime): Feb 1 12:34:00 2020 . cd ~/.Trash echo &quot;Creating in between file...&quot; touch betweenfile.txt touch -t 202004201234 betweenfile.txt stat -f &quot;Access (atime): %Sa%nModify (mtime): %Sm%nChange (ctime): %Sc%nBirth (Btime): %SB&quot; betweenfile.txt . Creating in between file... Access (atime): Apr 20 12:34:00 2020 Modify (mtime): Apr 20 12:34:00 2020 Change (ctime): May 18 22:41:46 2020 Birth (Btime): Apr 20 12:34:00 2020 . Find files with access time older than a specified number of days in the past: . find ./oldfile.txt ./betweenfile.txt ./newfile.txt -atime +20 . ./oldfile.txt ./betweenfile.txt . Find files with access time newer than a specified number of days in the past: . find ./oldfile.txt ./betweenfile.txt ./newfile.txt -atime -30 . ./betweenfile.txt ./newfile.txt . Find files with change time more recent than a specified number of minutes in the past: . touch -m ./betweenfile.txt find ./oldfile.txt ./betweenfile.txt ./newfile.txt -cmin -1 . ./oldfile.txt ./betweenfile.txt ./newfile.txt . TODO . iname: case insensitive | inode: number of inode | user: name of user to whom file belongs to | group: name of group | regex: use regular expression | .",
            "url": "https://antoinechoffrut.github.io/com-net-sec/cheatsheet/cli/macos/2020/05/15/find-cheatsheet.html",
            "relUrl": "/cheatsheet/cli/macos/2020/05/15/find-cheatsheet.html",
            "date": " • May 15, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "IP addressing",
            "content": "IPv4 classes . class A class B class C class D class E . leading bits 0 | 10 | 110 | 1110 | 1111 | . subnet mask 255.0.0.0 | 255.255.0.0 | 255.255.255.0 | N/A | N/A | . public range 1.0.0.0126.255.255.255 | 128.0.0.0191.255.255.255 | 192.0.0.0223.255.255.255 | 224.0.0.0239.255.255.255 | 240.0.0.0255.255.255.255 | . private range(dot decimal) 10.0.0.010.255.255.255 | 172.16.0.0172.31.255.255 | 192.168.0192.168.255.255 | | | . private range(CIDR) 10.0.0.0/8 | 172.16.0.0/12 | 192.168.0.0/16 | | | . nb of subnets 126 | 16,384 | 2,097,152 | | | . nb of hostsper network 16,277,214 | 65,534 | 254 | | | . Reserved blocks . block address range note . 0.0.0.0/8 | 0.0.0.0 - 0.255.255.255 | reserved for self-identification | . 127.0.0.0/8 | 127.0.0.0 - 127.255.255.255 | reserved for loopback | . 169.254.0.0/16 | 169.254.0.0 - 169.254.255.255 | link-local addressing | . Appendix: Binary arithmetics . Powers of 2 . exponent power . 0 | 1 | . 1 | 2 | . 2 | 4 | . 3 | 8 | . 4 | 16 | . 5 | 32 | . 6 | 64 | . 7 | 128 | . 8 | 256 | . 9 | 512 | . 10 | 1024 | . Masks . mask (binary) mask (decimal) detail . 1111 1111 | 255 | = 256 - 1 | . 1111 1110 | 254 | = 256 - 2 | . 1111 1100 | 252 | = 256 - 4 | . 1111 1000 | 248 | = 256 - 8 | . 1111 0000 | 240 | = 256 - 16 | . 1110 0000 | 224 | = 256 - 32 | . 1100 0000 | 192 | = 256 - 64 | . 1000 0000 | 128 | = 256 - 128 | .",
            "url": "https://antoinechoffrut.github.io/com-net-sec/cheatsheet/networking/2020/05/07/ip-addressing.html",
            "relUrl": "/cheatsheet/networking/2020/05/07/ip-addressing.html",
            "date": " • May 7, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Common TCP and UDP port numbers",
            "content": "Protocols: TCP vs UDP . protocol TCP UDP . full name | Transmission Control Protocol | User Datagram Protocol | . connection | connection-oriented | connection-less | . reliability | reliable | unreliable | . error checking | error checking and recovery | error checking, no recovery | . acknowledgment | acknowledgment | no acknowledgment | . Port number ranges . See Section 6, page 10 of RFC6335. . name range assigned by . well-known portssystem ports | 0 - 10234 | IANA | . user portsregistered ports | 1024 - 49151 | IANA | . dynamic portsprivate portsephemeral ports | 49152 - 65535 | never | . Common TCP and UDP port numbers . This is the list from the the CompTAI A+ Certification Exam: Core 1 Objectives 220-1001. . service protocol/port number . FTP | TCP/20 (data)TCP/21 (control) | . SSH | TCP/22 | . Telnet | TCP/23 | . SMTP | TCP/25 | . DNS | UDP/53 | . DHCP | UDP/67 (server)UDP/68 (client) | . HTTP | TCP/80 | . POP3 | TCP/110 | . IMAP4 | TCP/143 | . NetBIOS(name service) | UDP/137 | . NetBIOS(datagram service) | UDP/138 | . NetBIOS(session service) | TCP/139 | . SNMP | UDP/161 (get)UDP/162 (trap) | . LDAP | TCP,UDP/389 | . SLP | TCP,UDP/427 | . HTTPS | TCP/443 | . SMB | TCP/445 | . AFP | TCP/548 | . RDP | TCP/3389 | . Additional ports . service protocol/port number . POP3S | TCP/995 | . IMAPS | TCP/993 | . PDL | TCP/9100 | . RADIUS | TCP,UDP/1812 | . Acronyms and descriptions . service name description . FTP | File Transfer Protocol | send and receive files between systems | . SSH | Secure SHell | encrypted console access | . Telnet | Telecommunication Networrk | insecure consle access | . SMTP | Simple Mail Transfer Protocol | transfer emails between servers | . DNS | Domain Name System | convert domain names into IP addresses | . DHCP | Dynamic Host Configuration Protocol | automated configuration of IP addresses | . HTTP | HyperText Transfer Protocol | web server communication | . POP3 | Post Office Protocol v3 | email client protocol | . POP3S | POP3 Secure | email client protocol with encryption | . IMAP4 | Internet Message Access Protocol v4 | email client protocol | . IMAPS | IMAP Secure | email client protocol with encryption | . HTTPS | HTTP Secure | web server communication with encryption | . NetBIOS | NetBIOS name service | register, remove, and find Windows service by name | . NetBIOS | NetBIOS datagram service | Windows connection-less data transfer | . NetBIOS | NetBIOS session service | Windows connection-oriented data transfer | . SNMP | Simple Network Management Protocol | gather statistics from networks | . LDAP | Lightweight Domain Access Protocol | management and authentication on network | . SLP | Service Location Protocol | (macos?) service discovery | . SMB | Server Message Block | Windows file transfer and printer sharing | . CIFS | Common Internet File System | Windows file transfer and printer sharing | . AFP | Apple Filing Protocol | macos file transfer | . RDP | Remote Desktop Protocol | graphical display of remote devices | . PDL | Page Description Language data stream | raw data stream for printing | . SLP | Service Location Protocol | service discovery protocol | . AFP | Apple File Protocol | Apple&#39;s proprietary file sharing network protocol | . RADIUS | Remote Authentication | | . References . IANA: Service names and transport protocol port number registry (RFC6335) | RFC1700: .txt, .pdf (ietf.org) | Wikipedia: Well-known ports, in “List of TCP and UDP port numbers” | .",
            "url": "https://antoinechoffrut.github.io/com-net-sec/cheatsheet/networking/protocols/2020/05/06/port-numbers.html",
            "relUrl": "/cheatsheet/networking/protocols/2020/05/06/port-numbers.html",
            "date": " • May 6, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "The grep command (macOS)",
            "content": "References . Documentation. . man page documentation | Examples using grep (tldp.org) | Character classes and bracket expressions (gnu.org) | A large collection of Unix/Linux ‘grep’ command examples | grep or and not operators | 15 practical unix grep command examples . | What&#39;s the difference between b and &lt; in the grep command? (unix.stackexchange) . | Tutorial: Find Strings in Text Files Using Grep with Regular Expressions (Matt Zand, thenewstack) | Regular Expressions In grep examples (cyberciti.biz) | regex quickstart (Rex Egg) | . Sample text files . The sample text files used in this post are directly available from the OS: . calendar files in /usr/share/calendar | dictionary words in /usr/share/dict/words | meaning of flowers in /usr/share/misc/flowers | birth token /usr/share/misc/birthtoken | the ascii table /usr/share/misc/ascii | units /usr/share/misc/units.lib | . System information . Version of grep used in this page: . grep -V . grep (BSD grep) 2.5.1-FreeBSD . Operating system used in this page: . uname -v . Darwin Kernel Version 19.4.0: Wed Mar 4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64 . Basic usage . Match a string . In a single file: . grep &quot;Alan&quot; /usr/share/calendar/calendar.birthday . 06/07 Alan Mathison Turing died, 1954 06/23 Alan Mathison Turing born, 1912 . In multiple files: . grep &quot;Alan&quot; /usr/share/calendar/calendar.* . /usr/share/calendar/calendar.birthday:06/07 Alan Mathison Turing died, 1954 /usr/share/calendar/calendar.birthday:06/23 Alan Mathison Turing born, 1912 /usr/share/calendar/calendar.computer:06/07 Alan Mathison Turing died, 1954 /usr/share/calendar/calendar.computer:06/23 Alan Mathison Turing born, 1912 /usr/share/calendar/calendar.freebsd:06/06 Alan Eldridge &lt;alane@FreeBSD.org&gt; died in Denver, Colorado, 2003 /usr/share/calendar/calendar.history:06/28 Supreme Court decides in favor of Alan Bakke, 1978 . Insert line number: -n . grep -n Alan /usr/share/calendar/calendar.birthday . 158:06/07 Alan Mathison Turing died, 1954 168:06/23 Alan Mathison Turing born, 1912 . Highlight match: --color . . Note: This is not currently visible in the html page. . grep --color &quot;Alan&quot; /usr/share/calendar/calendar.birthday . 06/07 Alan Mathison Turing died, 1954 06/23 Alan Mathison Turing born, 1912 . Match count: -c . In a single file: . grep -c &quot;Alan&quot; /usr/share/calendar/calendar.birthday . 2 . In multiple files: . grep -c &quot;Alan&quot; /usr/share/calendar/calendar.[bc]* . /usr/share/calendar/calendar.birthday:2 /usr/share/calendar/calendar.christian:0 /usr/share/calendar/calendar.computer:2 /usr/share/calendar/calendar.croatian:0 . Case-insensitive match . grep -i &quot;unix&quot; /usr/share/calendar/calendar.computer . 01/01 The Epoch (Time 0 for UNIX systems, Midnight GMT, 1970) 05/19 UNIX is 10000 days old, 1997 08/14 First Unix-based mallet created, 1954 . File names with a match: -l . grep -l &quot;Alan&quot; /usr/share/calendar/calendar.* . /usr/share/calendar/calendar.birthday /usr/share/calendar/calendar.computer /usr/share/calendar/calendar.freebsd /usr/share/calendar/calendar.history . Position of match in file: -b . grep -b &quot;Alan&quot; /usr/share/calendar/calendar.birthday . 6906:06/07 Alan Mathison Turing died, 1954 7346:06/23 Alan Mathison Turing born, 1912 . Include/exclude files: --include, --exclude . Exclude file in search: . grep &quot;Alan&quot; --exclude /usr/share/calendar/calendar.computer /usr/share/calendar/calendar.* . /usr/share/calendar/calendar.birthday:06/07 Alan Mathison Turing died, 1954 /usr/share/calendar/calendar.birthday:06/23 Alan Mathison Turing born, 1912 /usr/share/calendar/calendar.freebsd:06/06 Alan Eldridge &lt;alane@FreeBSD.org&gt; died in Denver, Colorado, 2003 /usr/share/calendar/calendar.history:06/28 Supreme Court decides in favor of Alan Bakke, 1978 . Include files: . grep &quot;Alan&quot; --include &quot;calendar.*&quot; /usr/share/calendar/* . /usr/share/calendar/calendar.birthday:06/07 Alan Mathison Turing died, 1954 /usr/share/calendar/calendar.birthday:06/23 Alan Mathison Turing born, 1912 /usr/share/calendar/calendar.computer:06/07 Alan Mathison Turing died, 1954 /usr/share/calendar/calendar.computer:06/23 Alan Mathison Turing born, 1912 /usr/share/calendar/calendar.freebsd:06/06 Alan Eldridge &lt;alane@FreeBSD.org&gt; died in Denver, Colorado, 2003 /usr/share/calendar/calendar.history:06/28 Supreme Court decides in favor of Alan Bakke, 1978 . Whole word match: -w . grep -w -n --color &quot;Francis&quot; /usr/share/calendar/calendar.birthday . 31:01/22 Sir Francis Bacon born, 1561 273:11/20 Robert Francis Kennedy (RFK) born in Boston, Massachusetts, 1925 . ... as opposed to string matches: . grep -n --color &quot;Francis&quot; /usr/share/calendar/calendar.birthday . 31:01/22 Sir Francis Bacon born, 1561 104:03/30 Francisco Jose de Goya born, 1746 129:04/29 William Randolph Hearst born in San Francisco, 1863 151:05/30 Mel (Melvin Jerome) Blanc born in San Francisco, 1908 273:11/20 Robert Francis Kennedy (RFK) born in Boston, Massachusetts, 1925 . Lines before/after/around match . Show two lines before each match: . grep -n --color -B2 &quot;uncomputed&quot; /usr/share/dict/words . 212942-uncomputableness 212943-uncomputably 212944:uncomputed . Show three lines after each match: . grep -n --color -A3 &quot;uncomputed&quot; /usr/share/dict/words . 212944:uncomputed 212945-uncomraded 212946-unconcatenated 212947-unconcatenating . Show two lines before and three lines after each match: . grep -n --color -B2 -A3 &quot;uncomputed&quot; /usr/share/dict/words . 212942-uncomputableness 212943-uncomputably 212944:uncomputed 212945-uncomraded 212946-unconcatenated 212947-unconcatenating . Show two lines around match: . grep -n --color -C2 &quot;uncomputed&quot; /usr/share/dict/words . 212942-uncomputableness 212943-uncomputably 212944:uncomputed 212945-uncomraded 212946-unconcatenated . Recursive search: -R . grep -Rn --color &quot;then&quot; /usr/share/misc/ . /usr/share/misc//units.lib:642:sthene 1e+3 nt /usr/share/misc//mdoc.template:25:. &#34; Cross-references should be ordered by section (low to high), then in . Invert match: -v . Find lines not containing a pattern: . grep -v &quot;:&quot; /usr/share/misc/flowers . # @(#)flowers 8.1 (Berkeley) 6/8/93 # # Upside down reverses the meaning. . Regular expressions . ? The preceding item is optional and matched at most once | * The preceding item will be matched zero or more times | + The preceding item will be matched one or more times | {n} The preceding item is matched exactly n times | {n,} The preceding item is matched n or more times | {,m} The preceding item is matched at most m times | {n,m} The preceding item is matched at least n times, but not more than m times . | &lt; matches the beginning of a word . | &gt; matches the end of a word | b matches both boundaries if at the end or at the beginning | . Classes of characters: . [[:alnum:]]: Alphanumeric characters. | [[:alpha:]]: Alphabetic characters | [[:blank:]]: Blank characters: space and tab. | [[:digit:]]: Digits: ‘0 1 2 3 4 5 6 7 8 9’. | [[:lower:]]: Lower-case letters: ‘a b c d e f g h i j k l m n o p q r s t u v w x y z’. | [[:space:]]: Space characters: tab, newline, vertical tab, form feed, carriage return, and space. | [[:upper:]]: Upper-case letters: ‘A B C D E F G H I J K L M N O P Q R S T U V W X Y Z’. | . Word anchors: ^, $, &gt;, &gt;, b . Lines beginning with pattern: . grep -n --color &quot;^compute&quot; /usr/share/dict/words . 40564:compute 40565:computer . Lines ending with pattern: . grep -n --color &quot;compute$&quot; /usr/share/dict/words . 40564:compute 117000:miscompute 164643:recompute . Beginning a word: . grep -n --color &#39; &lt;compute&#39; /usr/share/dict/words . 40564:compute 40565:computer . Ending a word: . grep -n --color &#39;compute &gt;&#39; /usr/share/dict/words . 40564:compute 117000:miscompute 164643:recompute . Words of specified length: . grep -n --color &#39; &lt;. {24 } &gt;&#39; /usr/share/dict/words . 72632:formaldehydesulphoxylate 140339:pathologicopsychological 175108:scientificophilosophical 200796:tetraiodophenolphthalein 203042:thyroparathyroidectomize . Words with fixed length and speficied starting and ending characters: . grep -n --color &#39; &lt;y...h &gt;&#39; /usr/share/dict/words . 234368:yamph 234449:yarth 234632:yerth 234702:yirth 234824:youth . Words with specified first and last characters, of any length: . grep -n &#39; &lt;q.*x &gt;&#39; /usr/share/dict/words . 161224:quadratrix 161400:quadruplex 161963:quincunx . Boolean OR . grep -n --color -E &#39;computer|hardware&#39; /usr/share/dict/words . 40565:computer 82436:hardware 82437:hardwareman . grep -n --color -E &#39;Rose|Violet&#39; /usr/share/misc/birthtoken . 4:February:Amethyst:Violet 8:June:Pearl:Rose . Character classes . Match whole words gray or grey: . grep -n --color &#39; &lt;gr[ae]y &gt;&#39; /usr/share/dict/words . 79755:gray 79976:grey . Match words of two characters, first an upper case, the second lower case: . grep --color &#39; &lt;[[:upper:]][[:lower:]] &gt;&#39; /usr/share/misc/birthtoken . May:Emerald:Lily Of The Valley . Match numbers of any length: . grep -n --color -E &#39; d+&#39; /usr/share/calendar/calendar.australia . 4: * $FreeBSD: src/usr.bin/calendar/calendars/calendar.australia,v 1.7 2006/10/06 23:20:01 flz Exp $ 10:LANG=en_AU.ISO8859-1 13:Jan 26 Australia Day 15:Apr 25 Anzac Day 20:Mar 18 Canberra Day (ACT) 21:8/MonFirst Bank Holiday (ACT, NSW) 22:10/MonFirst Labour Day (ACT, NSW, SA) 25:3/MonSecond Labour Day (Vic) 29:Feb 11 Regatta Day (Tas) 30:Feb 27 Launceston Cup (Tas) 31:Mar 11 Eight Hours Day (Tas) 33:Oct 10 Launceston Show Day (Tas) 34:Oct 24 Hobart Show Day (Tas) 35:Nov 04 Recreation Day (N Tas) 39:Dec 26 Proclamation Day holiday (SA) 42:3/MonFirst Labour Day (WA) 43:6/MonFirst Foundation Day (WA) 44:Sep 30 Queen&#39;s Birthday (WA) 47:5/MonFirst May Day (NT) 48:7/FriFirst Alice Springs Show Day (NT) 49:7/FriSecond Tennant Creek Show Day (NT) 50:7/FriThird Katherine Show Day (NT) 51:7/FriLast Darwin Show Day (NT) 52:8/MonFirst Picnic Day (NT) 55:5/MonFirst Labour Day (Qld) 56:Aug 14 RNA Show Day (Brisbane metro) . Non-white space characters: S . Match non-empty lines: . echo -e &#39;one n ntwo n nthree&#39; | grep &quot; S&quot; . one two three .",
            "url": "https://antoinechoffrut.github.io/com-net-sec/cheatsheet/cli/macos/2020/05/05/grep-cheatsheet.html",
            "relUrl": "/cheatsheet/cli/macos/2020/05/05/grep-cheatsheet.html",
            "date": " • May 5, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "I am a mathematician by training, with a decade of research experience in academia, where I specialized in the analysis of partial differential equations. . I am interested in applications of machine learning techniques to computer and information system security. This site focuses on computers, networking, and security, while fastai companion deals with machine learning in general and neural nets in particular, as well as the jPyTorch and fastai libraries. .",
          "url": "https://antoinechoffrut.github.io/com-net-sec/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://antoinechoffrut.github.io/com-net-sec/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}